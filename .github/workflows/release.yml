name: release
on: push

jobs:
  lavapipe:
    runs-on: ubuntu-20.04
    steps:
    - name: cache-lavapipe
      id: cache-lavapipe
      uses: actions/cache@v2.1.6
      with:
        path: lavapipe-install
        key: lavapipe-linux-install-20211002
    - name: checkout-lavapipe
      if: steps.cache-lavapipe.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: mesa3d/mesa
        path: mesa
        ref: 0a592db57360a7847ca9c57e47f6200a2992f2e9
    - name: lavapipe
      if: steps.cache-lavapipe.outputs.cache-hit != 'true'
      run: |
        mkdir -p "$GITHUB_WORKSPACE/lavapipe-install"
        echo 'deb-src http://azure.archive.ubuntu.com/ubuntu focal main' | sudo tee -a /etc/apt/sources.list
        echo 'deb-src http://azure.archive.ubuntu.com/ubuntu focal-updates main' | sudo tee -a /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get build-dep mesa
        cd mesa
        mkdir build
        cd build
        meson -Dprefix="$GITHUB_WORKSPACE/lavapipe-install" -Dbuildtype=release -Db_lto=true -Db_ndebug=true -Dplatforms="x11" -Ddri3=enabled -Ddri-drivers="" -Dgallium-drivers=swrast -Dgallium-vdpau=disabled -Dgallium-xvmc=disabled -Dgallium-omx=disabled -Dgallium-va=disabled -Dgallium-xa=disabled -Dgallium-opencl=disabled -Dopencl-native=false -Dvulkan-drivers=swrast -Dshader-cache=disabled -Dgles1=disabled -Dgles2=disabled -Dopengl=false -Dgbm=disabled -Dglx=disabled -Degl=disabled -Dllvm=enabled -Dvalgrind=disabled -Dlibunwind=disabled -Dlmsensors=disabled ..
        ninja
        ninja install
        
    - name: debug-output
      run: |
        cat "$GITHUB_WORKSPACE/lavapipe-install/share/vulkan/icd.d/lvp_icd.x86_64.json"
        find $GITHUB_WORKSPACE/lavapipe-install/

    - name: vulkansdk
      run: |
        sudo apt-get update
        sudo apt install -y libvulkan-dev vulkan-utils

    - name: ncnn
      uses: actions/checkout@v2
      with:
        repository: Tencent/ncnn
        path: ncnn
        submodules: recursive

    - name: build
      run: |
        cd ncnn
        mkdir build && cd build
        cmake -DNCNN_VULKAN=ON -DNCNN_BUILD_TESTS=ON -DNCNN_BUILD_EXAMPLES=OFF -DNCNN_BUILD_TOOLS=OFF ..
        cmake --build . -j 2
    - name: test
      run: |
        export VK_ICD_FILENAMES="$GITHUB_WORKSPACE/lavapipe-install/share/vulkan/icd.d/lvp_icd.x86_64.json"
        cd ncnn
        cd build && ctest --output-on-failure
