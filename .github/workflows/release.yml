name: release
on:
  push:
    tags:
      - '*'

env:
  DEVELOPER_DIR: /Applications/Xcode_12.2.app/Contents/Developer
jobs:
  macos-clang:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v1
      with:
        path: openmp-install
        key: openmp-macos-install-20201213-3
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
        mkdir -p build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
        mkdir $GITHUB_WORKSPACE/openmp-install
        cp -r install/* $GITHUB_WORKSPACE/openmp-install

    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-macos
        path: openmp-install

  ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v1
      with:
        path: openmp-install
        key: openmp-ios-install-20201213-3
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
        mkdir -p build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=OS -DENABLE_BITCODE=0 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="armv7;arm64" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
        mkdir $GITHUB_WORKSPACE/openmp-install
        cp -r install/* $GITHUB_WORKSPACE/openmp-install

    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-ios
        path: openmp-install

  ios-simulator:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v1
      with:
        path: openmp-install
        key: openmp-ios-simulator-install-20201213-3
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
        mkdir -p build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=SIMULATOR -DENABLE_BITCODE=0 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="i386;x86_64" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
        mkdir $GITHUB_WORKSPACE/openmp-install
        cp -r install/* $GITHUB_WORKSPACE/openmp-install

    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-ios-simulator
        path: openmp-install

  release:
    needs: [macos, ios, ios-simulator]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: download
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: package-macos
      run: |
        rm -rf openmp.framework
        mkdir -p openmp.framework/Versions/A/Headers
        mkdir -p openmp.framework/Versions/A/Resources
        ln -s A openmp.framework/Versions/Current
        ln -s Versions/Current/Headers openmp.framework/Headers
        ln -s Versions/Current/Resources openmp.framework/Resources
        ln -s Versions/Current/openmp openmp.framework/openmp
        lipo -create artifacts/openmp-macos/lib/libomp.a -o openmp.framework/Versions/A/openmp
        cp -r artifacts/openmp-macos/include/* openmp.framework/Versions/A/Headers/
        cp Info.plist openmp.framework/Versions/A/Resources/
        rm -f openmp-macos.framework.zip
        zip -9 -y -r openmp-macos.framework.zip openmp.framework

    - name: package-ios
      run: |
        rm -rf openmp.framework
        mkdir -p openmp.framework/Versions/A/Headers
        mkdir -p openmp.framework/Versions/A/Resources
        ln -s A openmp.framework/Versions/Current
        ln -s Versions/Current/Headers openmp.framework/Headers
        ln -s Versions/Current/Resources openmp.framework/Resources
        ln -s Versions/Current/openmp openmp.framework/openmp
        lipo -create artifacts/openmp-ios/lib/libomp.a artifacts/openmp-ios-simulator/lib/libomp.a -o openmp.framework/Versions/A/openmp
        cp -r artifacts/openmp-ios/include/* openmp.framework/Versions/A/Headers/
        cp Info.plist openmp.framework/Versions/A/Resources/
        rm -f openmp-ios.framework.zip
        zip -9 -y -r openmp-ios.framework.zip openmp.framework

    - name: create-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: upload-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: openmp-macos.framework.zip
        asset_name: openmp-macos.framework.zip
        asset_content_type: application/zip

    - name: upload-ios
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: openmp-ios.framework.zip
        asset_name: openmp-ios.framework.zip
        asset_content_type: application/zip
