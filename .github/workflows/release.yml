name: release
on: push

jobs:
  pnnx-windows:
    runs-on: windows-latest

    strategy:
      fail-fast: false

    steps:
    - name: setup libtorch
      run: |
        Invoke-WebRequest -Uri https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-1.10.0%2Bcpu.zip -OutFile libtorch-win-shared-with-deps-1.10.0+cpu.zip
        7z x libtorch-win-shared-with-deps-1.10.0+cpu.zip

    - name: ncnn
      uses: actions/checkout@v2
      with:
        repository: nihui/ncnn
        path: ncnn
        ref: pnnx
        submodules: recursive

    - name: build-pnnx
      run: |
        cd ncnn/tools/pnnx
        mkdir build && cd build
        cmake -DTorch_INSTALL_DIR="$env:GITHUB_WORKSPACE/libtorch" ..
        cmake --build . --config Release -j 2

  pnnx-macos:
    runs-on: macos-latest

    strategy:
      fail-fast: false

    steps:
    - name: setup libtorch
      run: |
        wget https://download.pytorch.org/libtorch/cpu/libtorch-macos-1.10.0.zip
        unzip -q libtorch-macos-1.10.0.zip

    - name: ncnn
      uses: actions/checkout@v2
      with:
        repository: nihui/ncnn
        path: ncnn
        ref: pnnx
        submodules: recursive

    - name: build-pnnx
      run: |
        cd ncnn/tools/pnnx
        mkdir build && cd build
        cmake -DTorch_INSTALL_DIR="$GITHUB_WORKSPACE/libtorch" -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j 2

  pnnx-ubuntu:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
#       matrix:
#         include:
#           - torch-version: 1.8.1
#             torchvision-version: 0.9.1

#           - torch-version: 1.9.1
#             torchvision-version: 0.10.1

#           - torch-version: 1.10.0
#             torchvision-version: 0.11.1

    steps:
#     - name: setup pytorch-${{ matrix.torch-version }}
#       run: |
#         pip install torch==${{ matrix.torch-version }}+cpu torchvision==${{ matrix.torchvision-version }}+cpu -f https://download.pytorch.org/whl/torch_stable.html

#     - name: lcov
#       run: sudo apt-get install lcov

    - name: setup libtorch
      run: |
        wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.10.0%2Bcpu.zip
        unzip -q libtorch-cxx11-abi-shared-with-deps-1.10.0+cpu.zip

    - name: ncnn
      uses: actions/checkout@v2
      with:
        repository: nihui/ncnn
        path: ncnn
        ref: pnnx
        submodules: recursive

#     - name: build-ncnn
#       run: |
#         python -m pip install --upgrade pip
#         pip install pytest setuptools wheel twine
#         cd ncnn
#         mkdir build && cd build
#         cmake -DCMAKE_BUILD_TYPE=Release -DNCNN_PYTHON=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF ..
#         cmake --build . -j 2
#         cd ..
#         pip install .

#         cmake -DTorch_INSTALL_DIR="$HOME/.local/lib/python3.8/site-packages/torch" -DCMAKE_BUILD_TYPE=Debug -DPNNX_COVERAGE=ON ..
    - name: build-pnnx
      run: |
        cd ncnn/tools/pnnx
        mkdir build && cd build
        cmake -DTorch_INSTALL_DIR="$GITHUB_WORKSPACE/libtorch" -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j 2

#     - name: test
#       run: |
#         cd ncnn/tools/pnnx
#         cd build && ctest --output-on-failure

#     - name: lcov-collect
#       run: |
#         cd ncnn/tools/pnnx
#         cd build
#         lcov -d ./src -c -o lcov.info
#         lcov -r lcov.info '/usr/*' -o lcov.info
#         lcov -r lcov.info '*/torch/include/*' -o lcov.info
#         lcov --list lcov.info
#     - name: codecov
#       uses: codecov/codecov-action@v2.1.0
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         file: ncnn/tools/pnnx/build/lcov.info
