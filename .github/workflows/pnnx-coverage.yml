name: pnnx-coverage
on: push

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - torch-version: 1.8.1
            torchvision-version: 0.9.1

          - torch-version: 1.9.1
            torchvision-version: 0.10.1

          - torch-version: 1.10.0
            torchvision-version: 0.11.1

    steps:
    - name: setup pytorch-${{ matrix.torch-version }}
      run: |
        pip install torch==${{ matrix.torch-version }}+cpu torchvision==${{ matrix.torchvision-version }}+cpu -f https://download.pytorch.org/whl/torch_stable.html

    - name: lcov
      run: sudo apt-get install lcov

    - name: ncnn
      uses: actions/checkout@v2
      with:
        repository: nihui/ncnn
        path: ncnn
        ref: pnnx
        submodules: recursive

    - name: build-ncnn
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine
        cd ncnn
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DNCNN_PYTHON=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF ..
        cmake --build . -j 2
        cd ..
        pip install .

    - name: build-pnnx
      run: |
        cd ncnn/tools/pnnx
        mkdir build && cd build
        cmake -DTorch_INSTALL_DIR="$HOME/.local/lib/python3.8/site-packages/torch" -DCMAKE_BUILD_TYPE=Debug -DPNNX_COVERAGE=ON ..
        cmake --build . -j 2

    - name: test
      run: |
        cd ncnn/tools/pnnx
        cd build && ctest --output-on-failure

    - name: lcov-collect
      run: |
        cd ncnn/tools/pnnx
        cd build
        lcov -d ./src -c -o lcov.info
        lcov -r lcov.info '/usr/*' -o lcov.info
        lcov -r lcov.info '*/torch/include/*' -o lcov.info
        lcov --list lcov.info
    - name: codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ncnn/tools/pnnx/build/lcov.info
