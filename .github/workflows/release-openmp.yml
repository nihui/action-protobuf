name: release
on: push

env:
  DEVELOPER_DIR: /Applications/Xcode_12.2.app/Contents/Developer
  EMSCRIPTEN_VERSION: 2.0.8

jobs:
  openmp-macos:
    runs-on: macos-latest
    steps:
    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v2.1.6
      with:
        path: openmp-install
        key: openmp-macos-release-11.0.0
    - name: checkout
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
    - name: build-x86_64
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build-x86_64 && cd build-x86_64
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES="x86_64" \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: build-arm64
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build-arm64 && cd build-arm64
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES="arm64" \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: merge-fat-library
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        rm -rf $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install
        cp -r openmp-11.0.0.src/build-x86_64/install/include $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install/lib
        lipo -create openmp-11.0.0.src/build-x86_64/install/lib/libomp.a openmp-11.0.0.src/build-arm64/install/lib/libomp.a -o $GITHUB_WORKSPACE/openmp-install/lib/libomp.a
    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-macos
        path: openmp-install

  openmp-ios:
    runs-on: macos-latest
    steps:
    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v2.1.6
      with:
        path: openmp-install
        key: openmp-ios-release-11.0.0
    - name: checkout
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
    - name: build
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=OS -DENABLE_BITCODE=0 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="armv7;arm64;arm64e" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: build-simulator
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build-simulator && cd build-simulator
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=SIMULATOR -DENABLE_BITCODE=0 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="i386;x86_64" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: merge-fat-library
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        rm -rf $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install
        cp -r openmp-11.0.0.src/build/install/include $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install/lib
        lipo -create openmp-11.0.0.src/build/install/lib/libomp.a openmp-11.0.0.src/build-simulator/install/lib/libomp.a -o $GITHUB_WORKSPACE/openmp-install/lib/libomp.a
    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-ios
        path: openmp-install

  openmp-ios-bitcode:
    runs-on: macos-latest
    steps:
    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v2.1.6
      with:
        path: openmp-install
        key: openmp-ios-bitcode-release-11.0.0
    - name: checkout
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
    - name: build
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=OS -DENABLE_BITCODE=1 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="armv7;arm64;arm64e" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: build-simulator
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir build-simulator && cd build-simulator
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DIOS_PLATFORM=SIMULATOR -DENABLE_BITCODE=1 -DENABLE_ARC=0 -DENABLE_VISIBILITY=0 -DIOS_ARCH="i386;x86_64" \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 2
        cmake --build . --target install
    - name: merge-fat-library
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        rm -rf $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install
        cp -r openmp-11.0.0.src/build/install/include $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install/lib
        lipo -create openmp-11.0.0.src/build/install/lib/libomp.a openmp-11.0.0.src/build-simulator/install/lib/libomp.a -o $GITHUB_WORKSPACE/openmp-install/lib/libomp.a
    - name: upload
      uses: actions/upload-artifact@v2
      with:
        name: openmp-ios-bitcode
        path: openmp-install

